# Script para configurar la base de datos PostgreSQL
# Este script solicita la contrase√±a del usuario postgres

Write-Host "================================================================" -ForegroundColor Cyan
Write-Host "     Configuraci√≥n de Base de Datos PostgreSQL para ShopCart" -ForegroundColor Cyan
Write-Host "================================================================" -ForegroundColor Cyan
Write-Host ""

# Verificar que PostgreSQL est√© corriendo
$service = Get-Service -Name "postgresql-x64-17" -ErrorAction SilentlyContinue
if ($service -eq $null) {
    Write-Host "‚ùå Servicio PostgreSQL 17 no encontrado" -ForegroundColor Red
    exit 1
}

if ($service.Status -ne "Running") {
    Write-Host "‚ö†Ô∏è  Iniciando servicio PostgreSQL..." -ForegroundColor Yellow
    Start-Service "postgresql-x64-17"
    Start-Sleep -Seconds 3
}

Write-Host "‚úÖ Servicio PostgreSQL est√° corriendo" -ForegroundColor Green
Write-Host ""

$psqlPath = "C:\Program Files\PostgreSQL\17\bin\psql.exe"
$setupScript = "setup-database.sql"

# Verificar que el archivo de script existe
if (-not (Test-Path $setupScript)) {
    Write-Host "‚ùå Archivo $setupScript no encontrado en el directorio actual" -ForegroundColor Red
    exit 1
}

Write-Host "üìã Ejecutando script de configuraci√≥n de base de datos..." -ForegroundColor Yellow
Write-Host "   Ubicaci√≥n de psql: $psqlPath" -ForegroundColor Gray
Write-Host "   Script a ejecutar: $setupScript" -ForegroundColor Gray
Write-Host ""
Write-Host "üîê Se te pedir√° la contrase√±a del usuario 'postgres'" -ForegroundColor Yellow
Write-Host ""

try {
    & $psqlPath -U postgres -d postgres -f $setupScript
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host ""
        Write-Host "================================================================" -ForegroundColor Green
        Write-Host "‚úÖ ¬°Base de datos configurada exitosamente!" -ForegroundColor Green
        Write-Host "================================================================" -ForegroundColor Green
        Write-Host ""
        Write-Host "üîß Detalles de conexi√≥n:" -ForegroundColor Cyan
        Write-Host "   ‚Ä¢ Host: localhost" -ForegroundColor White
        Write-Host "   ‚Ä¢ Puerto: 5432" -ForegroundColor White
        Write-Host "   ‚Ä¢ Base de datos: shopcart_db" -ForegroundColor White
        Write-Host "   ‚Ä¢ Usuario: shopcart_user" -ForegroundColor White
        Write-Host "   ‚Ä¢ Contrase√±a: shopcart_password" -ForegroundColor White
        Write-Host ""
        Write-Host "üß™ Para probar la conexi√≥n:" -ForegroundColor Cyan
        Write-Host "   psql -U shopcart_user -d shopcart_db -h localhost" -ForegroundColor Gray
        Write-Host ""
    } else {
        Write-Host ""
        Write-Host "‚ùå Error al ejecutar el script de base de datos" -ForegroundColor Red
        Write-Host "   C√≥digo de salida: $LASTEXITCODE" -ForegroundColor Red
    }
} catch {
    Write-Host ""
    Write-Host "‚ùå Error al ejecutar psql: $_" -ForegroundColor Red
}

Write-Host ""
Write-Host "Presiona cualquier tecla para continuar..."
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
